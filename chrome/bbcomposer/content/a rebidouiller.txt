	bbcomposer.prototype.drag = function (hEvent)
		{
		var selection=this.getImprovedSelection();
		//hEvent.dataTransfer.mozSetDataAt('application/x-bbc-node', selection, 0);
		hEvent.dataTransfer.setData('text/html', 'fff');
		hEvent.dataTransfer.setData('text/plain', 'fff');
		/*var contents=this.doSeparateSelectionCommand();
		for(let i=0; i<contents.length; i++)
			{
			hEvent.dataTransfer.mozSetDataAt('application/x-moz-node', contents[i], i);
			}*/
		this.myBBComposerManager.displayStatusText('Dragged');
		}

	bbcomposer.prototype.overDrag = function (hEvent)
		{
		this.myBBComposerManager.displayStatusText('Is Over');
		if(hEvent.dataTransfer.types.contains('application/x-bbc-node')
			||hEvent.dataTransfer.types.contains("text/x-moz-url")
			||hEvent.dataTransfer.types.contains("text/html")
			||hEvent.dataTransfer.types.contains("text/uri-list")
			||hEvent.dataTransfer.types.contains("text/unicode")
			||hEvent.dataTransfer.types.contains("application/x-moz-file"))
				{
				hEvent.dataTransfer.dropEffect="move";
				hEvent.dataTransfer.effectAllowed="move";
				}
		}

	bbcomposer.prototype.endDrag = function (hEvent)
		{
		if(hEvent.dataTransfer.dropEffect='none')
			{
			this.myBBComposerManager.displayStatusText('Drag ended');
			}
		}

	bbcomposer.prototype.drop = function (hEvent)
		{
		this.myBBComposerManager.displayStatusText('Dropped');
		var content;
		if(hEvent.dataTransfer)
			{
			if(hEvent.dataTransfer.types.contains('application/x-bbc-node'))
				{/*
				hEvent.dataTransfer.getData("text/x-moz-url")
				content=this.importNodes("text/x-moz-url");*/
				alert('node');
				}
			else if(hEvent.dataTransfer.types.contains("text/x-moz-url"))
				content=this.importContent(hEvent.dataTransfer.getData("text/x-moz-url"),"text/x-moz-url");
			else if(hEvent.dataTransfer.types.contains("text/html"))
				content=this.importContent(hEvent.dataTransfer.getData("text/html"),"text/html");
			else if(hEvent.dataTransfer.types.contains("text/uri-list"))
				content=this.importContent(hEvent.dataTransfer.getData("text/uri-list"),"text/uri-list");
			else if(hEvent.dataTransfer.types.contains("text/unicode"))
				content=this.importContent(hEvent.dataTransfer.getData("text/unicode"),"text/unicode");
			else if(hEvent.dataTransfer.types.contains("application/x-moz-file"))
				content='application/x-moz-file';
			}
		else
			content=this.myBBComposerManager.getDroppedContent();
		if(content)
			this.insertContent(content,(hEvent.rangeParent?hEvent.rangeParent:null), (hEvent.rangeOffset?hEvent.rangeOffset:null));
		this.checkImages();
		}

		
		
					// FF 3.0 
			case "dragexit" :
			case "dragdrop" :
			// FF 3.5 
			case "drag" :
				hEvent.stopPropagation();
				hEvent.preventDefault();
			break;
			case "dragstart" :
				this.drag(hEvent);
				hEvent.stopPropagation();
				hEvent.preventDefault();
			break;
			case "dragover" :
			case "dragenter" :
				this.overDrag(hEvent);
				hEvent.stopPropagation();
				hEvent.preventDefault();
			break;
			case "dragleave" :
				hEvent.stopPropagation();
				hEvent.preventDefault();
			break;
			case "dragend" :
				this.endDrag(hEvent);
				hEvent.stopPropagation();
				hEvent.preventDefault();
			break;
			// FF3.0 & 3.5
			case "drop" :
				hEvent.stopPropagation();
				hEvent.preventDefault();
				this.drop(hEvent);
			break;